# adapted from: https://gist.github.com/bootandy/5546891
# created by Sivan Mehta
# use with: logging.config.dictConfig(yaml.load(open('logging.yaml', 'r')))

# Formatters detailed here: http://docs.python.org/2/library/logging.html#logrecord-attributes
version: 1
formatters:
  simple:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  detail:
    format: '%(asctime)s - %(levelname)s - File: %(filename)s - %(funcName)s() - Line: %(lineno)d -  %(message)s'

loggers:
  all:
    handlers: [all]
    propagate: true
  warn:
    handlers: [warn]
    propagate: true
  ingenia:
    handlers: [ingenia]
    propagate: false  # We dont want ingenia logs going everywhere
    qualname: ingenia
  tornado:
    handlers: [all]
    propagate: false

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: simple
    stream: ext://sys.stdout
  all:
    class: logging.handlers.TimedRotatingFileHandler
    level: INFO
    formatter: simple
    when: D
    interval: 1
    backupCount: 7
    filename: logs/web_service.log
  warn:
    class: logging.handlers.TimedRotatingFileHandler
    level: WARNING
    formatter: simple
    when: D
    interval: 1
    backupCount: 7
    filename: logs/web_service.log
  ingenia:
    class: logging.handlers.TimedRotatingFileHandler
    level: DEBUG
    formatter: simple
    when: D
    interval: 1
    backupCount: 7
    filename: logs/web_service.log

root:
  level: INFO
  handlers: [console, all, warn]
  propagate: true
